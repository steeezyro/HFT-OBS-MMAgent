[tool.poetry]
name = "hft-rl"
version = "1.0.0"
description = "HFT Order-Book Simulator with Market-Making RL Agent"
authors = ["HFT Team <team@hft.com>"]
license = "MIT"
readme = "../README.md"
packages = [{include = "hft_rl"}]

[tool.poetry.dependencies]
python = "^3.12"
numpy = "^1.24.0"
pandas = "^2.0.0"
gymnasium = "^0.29.0"
stable-baselines3 = "^2.0.0"
wandb = "^0.15.0"
pyzmq = "^25.0.0"
plotly = "^5.15.0"
jinja2 = "^3.1.0"
pyarrow = "^12.0.0"
numba = "^0.57.0"
scipy = "^1.11.0"
scikit-learn = "^1.3.0"
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
ruff = "^0.0.284"

[tool.poetry.dev-dependencies]
pytest = "^7.4.0"
pytest-cov = "^4.1.0"
black = "^23.7.0"
ruff = "^0.0.284"
mypy = "^1.5.0"
pre-commit = "^3.3.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.ruff]
select = ["I", "F", "E", "W", "C90"]
ignore = []
fixable = ["A", "B", "C", "D", "E", "F", "G", "I", "N", "Q", "S", "T", "W", "ANN", "ARG", "BLE", "COM", "DJ", "DTZ", "EM", "ERA", "EXE", "FBT", "ICN", "INP", "ISC", "NPY", "PD", "PGH", "PIE", "PL", "PT", "PTH", "PYI", "RET", "RSE", "RUF", "SIM", "SLF", "TCH", "TID", "TRY", "UP", "YTT"]
unfixable = []
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]
line-length = 88
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
target-version = "py312"

[tool.ruff.mccabe]
max-complexity = 10

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --cov=hft_rl --cov-report=term-missing --cov-report=html"
testpaths = [
    "tests",
]